#ifndef __GSS__SETTING__H__
#define __GSS__SETTING__H__

#ifdef __cplusplus
extern "C" {
#endif

#include "path.h"

#define IP_ADDR_LEN (128)

struct disp_svr_info;

typedef struct gss_setting{

	//global public IP
	char external_ip[IP_ADDR_LEN];

	char listen_ip[IP_ADDR_LEN];
	int listen_port;

	char ini_file_name[MAX_PATH];

	char log_file_name[MAX_PATH];
	int log_level;

	//if tcp client no send any command in unknown_tcp_timeout second
	//remove tcp client 
	int unknown_tcp_timeout;
	
	//max accept tcp count in one second
	int accept_period_limit;

	//max av connection count
	unsigned int max_av_conn_count;

	//enable gop cache
	char enable_gop_cache;

	// the MR(merged-write) time in ms.
	int mw_time;

	//current server id
	unsigned int server_id;

	//async db thread count
	unsigned int async_db_thread_count;

	//max client push bit rate
	unsigned int max_push_bitrate;

	//device av connection or push connection socket SO_RCVBUF size in byte
	int so_recvbuf;
}gss_setting;

extern gss_setting setting; 
inline gss_setting* get_gss_setting()
{
	return &setting;
}

int load_gss_setting(const char* ini_file);

void reload_disp_svr_info(struct disp_svr_info* disp_svr, int* count);

#ifdef __cplusplus
}    
#endif

#endif